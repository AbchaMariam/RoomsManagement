version: '3.4'

services:
  Rooms-Management-UI:
    image: rooms-management-ui:latest
    container_name: rooms_management_ui
    depends_on:
      - Rooms-Management-API
    build:
      context: RoomsManagement.UI/.
      dockerfile: Dockerfile
    ports:
      - "4200:4000"

  Rooms-Management-API:
    image: rooms-management-api:latest
    container_name: rooms_management_api
    build:
      context: RoomsManagement.API/.
      dockerfile: Dockerfile
    depends_on:
      db-service:
        condition: service_healthy
    links:
      - db-service
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      ConnectionStrings__DefaultConnection: "Server=db-service,1433;Database=RoomsDb;User Id=sa;Password=Your_password123;TrustServerCertificate=True;Encrypt=False;"
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
      ASPNETCORE_HTTPS_PORTS: 8081
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  db-service:
    container_name: db_service_container
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Your_password123
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    volumes:
      - db:/var/opt/mssql
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Your_password123 -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
volumes:
  db: